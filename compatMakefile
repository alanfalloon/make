# Copyright (C) 1988, 1989, 1991, 1992 Free Software Foundation, Inc.
# This file is part of GNU Make.
# 
# GNU Make is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# GNU Make is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Make; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

#
#	Makefile for GNU Make
#

CFLAGS = $(defines) -g
LDFLAGS = -g

# Define these for your system as follows:
#	-DNO_ARCHIVES		To disable `ar' archive support.
#	-DNO_FLOAT		To avoid using floating-point numbers.
#	-DENUM_BITFIELDS	If the compiler isn't GCC but groks enum foo:2.
#				Some compilers apparently accept this
#				without complaint but produce losing code,
#				so beware.
# NeXT 1.0a uses an old version of GCC, which required -D__inline=inline.
defines = @DEFS@

# Define these for your system as follows:
#	-DUMAX		Encore UMAX
#	-DUMAX_43	Encore UMAX 4.3 (also define UMAX)
#	-DNO_LDAV	Disable load-average checking.
# To read /dev/kmem (most Unix systems), define these if different from the
# given defaults:
#	-DKERNEL_FILE_NAME=\"/vmunix\"
#	-DLDAV_SYMBOL=\"_avenrun\"
#	-DLDAV_CVT="(double) load"
# Define:
#	-DNLIST_NAME_UNION	If `struct nlist' has a n_un member.
#	-DNLIST_NAME_ARRAY	If `n_name' is an array.
LOAD_AVG =

# If you are using the GNU C library, or have the GNU getopt functions in
# your C library, you can comment these out.
GETOPT = getopt.o getopt1.o
GETOPT_SRC = getopt.c getopt1.c getopt.h

# If your system doesn't have alloca, or the one provided is bad,
# get it from the Emacs distribution and define this.
ALLOCA = @ALLOCA@

# If your system needs extra libraries loaded in, define them here.
# System V probably need -lPW for alloca.  HP-UX 7.0's alloca in
# libPW.a is broken on HP9000s300 and HP9000s400 machines.  Use
# alloca.c instead on those machines.
LOADLIBES = @LIBS@

# If there are remote execution facilities defined,
# enable them with switches here (see remote-*.c).
REMOTE =

# Any extra object files your system needs.
extras = @LIBOBJS@

# Common prefix for machine-independent installed files.
prefix = /usr/local
# Common prefix for machine-dependent installed files.
exec_prefix = /usr/local

# Name under which to install GNU make.
instname = make
# Directory to install `make' in.
bindir = $(exec_prefix)/bin
# Directory to install the man page in.
mandir = $(prefix)/man/manl
# Number to put on the man page filename.
manext = l

# Install make setgid to this group so it can read /dev/kmem.
group = kmem

# Program to install `make'.
INSTALL_PROGRAM = @INSTALL_PROGRAM@
# Program to install the man page.
INSTALL_DATA = @INSTALL_DATA@

# Programs to make tags files.
ETAGS = etags -t
CTAGS = ctags -t

objs = commands.o job.o dir.o file.o getloadavg.o misc.o main.o read.o \
       remake.o remote.o rule.o implicit.o default.o variable.o expand.o \
       function.o vpath.o version.o $(GETOPT) $(extras)
srcs = commands.c job.c dir.c file.c getloadavg.c misc.c main.c read.c \
       remake.c remote.c rule.c implicit.c default.c variable.c expand.c \
       function.c vpath.c version.c $(GETOPT_SRC) \
       commands.h dep.h file.h job.h make.h rule.h variable.h


.SUFFIXES:
.SUFFIXES: .o .c .h .ps .dvi .texinfo

.PHONY: all doc
all: make
doc: make.info make.dvi


# Take your pick.
#makeinfo = emacs -batch -f batch-texinfo-format make.texinfo
makeinfo = makeinfo make.texinfo

make.info: make.texinfo
	$(makeinfo)


make.dvi: make.texinfo
	-tex make.texinfo
	texindex make.cp make.fn make.ky make.pg make.tp make.vr
	-tex make.texinfo

make.ps: make.dvi
	dvi2ps make.dvi > make.ps

make: $(objs)
	$(CC) $(LDFLAGS) $(objs) $(LOADLIBES) -o make.new
	mv -f make.new make

getloadavg.o: getloadavg.c
	$(CC) $(CFLAGS) $(LOAD_AVG) -c getloadavg.c
remote.o: remote.c
	$(CC) $(CFLAGS) $(REMOTE) -c remote.c

# For some losing Unix makes.
MAKE = make

glob/libglob.a: force
	cd glob; $(MAKE) CC='$(CC)' CFLAGS='$(CFLAGS) -I..' libglob.a
force:

tagsrcs = $(srcs) remote-*.c *.h
TAGS: $(tagsrcs)
	$(ETAGS) $(tagsrcs)
tags: $(tagsrcs)
	$(CTAGS) $(tagsrcs)

.PHONY: install
install: $(bindir)/$(instname) $(mandir)/$(instname).$(manext)

$(bindir)/$(instname): make
	$(INSTALL_PROGRAM) make $@.new
# These are necessary for load-average checking to work on most Unix machines.
	-chgrp $(group) $@.new
	-chmod g+s $@.new
	mv $@.new $@

$(mandir)/$(instname).$(manext): make.man
	$(INSTALL_DATA) make.man $@

.PHONY: clean realclean
clean: glob-clean
	-rm -f make *.o core
realclean: clean glob-realclean
	-rm -f TAGS tags make.info* make-* make.dvi
	-rm -f make.?? make.??s make.log make.toc make.*aux

.PHONY: glob-clean glob-realclean
glob-clean glob-realclean:
	cd glob; $(MAKE) $@

# Automatically generated dependencies will be put at the end of the file.

